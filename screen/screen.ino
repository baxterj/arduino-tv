#include <Adafruit_GFX.h>       // Core graphics library
#include <Adafruit_ST7735.h>    // Hardware-specific library for ST7735


//1. backlight anode
// 5V out

//2. Ground
// GND

//3. Reset
#define TFT_RESET 2

//4. Data / Command selection 
#define TFT_DATA_COM 3

//5. SPI data (MOSI)
#define TFT_MOSI 11

//6. SPI Clock
#define TFT_CLK 13

//7. 3.3v (VDD)
// 3V3

//8. Chip Select
#define TFT_CS 4

#define SCREEN_WIDTH 160
#define SCREEN_HEIGHT 80

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DATA_COM, TFT_RESET);
static const int IMG_W = 40;
static const int IMG_H = 20;
static const uint16_t mickey[] PROGMEM  = {
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9d1c, 0x52da, 0x3a59, 0x5b1a, 0xbdfd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0x96d4, 0xefbd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xce5e, 0x3a59, 0x845b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xefde, 0x2589, 0x2589, 0x6e50, 0x96d4, 0x96d4, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x2589, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf4b3, 0x4239, 0x79d1, 0xe0e5, 0xe8e4, 0xe8e4, 0x2589, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe9e8, 0xfdb7, 0x2589, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xf28a, 0xe8e4, 0xe8e4, 0xe8e4, 0xf3f0, 0xf472, 0xf472, 0xf472, 0xf472, 0xfedb, 0xffff, 0xffff, 0x8c7c, 0x4259, 0xe73e, 0x96d4, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe73e, 0x9d1c, 0x845b, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0x6aaf, 0xe8e4, 0xf472, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xfd55, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x637a, 0x63d9, 0xffff, 0xffff, 0xc519, 0x4279, 0x3a59, 0x918f, 0x99f0, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7bd, 0x2589, 0x8c7c, 0xef5f, 0xfedb, 0xe8e4, 0xff5d, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfeba, 0xf2ab, 0x8327, 0x59f5, 0x4239, 0xad3b, 0xffff, 0xffff, 0xffff, 0xfedb, 0xf38e, 0xffff, 0xffff, 0xffff, 0xbf59, 0x2589, 0xffff, 0xffff, 0x4259, 0xffff, 0xffff, 0xe8e4, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xfd96, 0xf26a, 0xe8e4, 0xfd55, 0xffff, 0x96d4, 0x4279, 0xf7bf, 0x633a, 0x843b, 0xffff, 0xffff, 0xffff, 0xe8e4, 0xffff, 0x7671, 0x2589, 0x4ded, 0xffff, 0xffff, 0xffff, 0x3a59, 0xffff, 0xffff, 0xe8e4, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xe925, 0xf1e8, 0xfdd7, 0xffff, 0xffff, 0xffff, 0xffff, 0x33f1, 0x8e16, 0xffff, 0xffff, 0xf79f, 0x5b1a, 0x5b1a, 0x96d5, 0x2589, 0x7e92, 0xefbd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x52da, 0xffff, 0xffff, 0xe8e4, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xf28b, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xf32d, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3a59, 0x7e72, 0x258a, 0x2589, 0x2589, 0x2d8a, 0x8b8d, 0x3a59, 0x79d2, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9d1c, 0xffff, 0xffff, 0xe8e4, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbf39, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x2589, 0x33f1, 0x4d6f, 0x96d4, 0xcf7a, 0x3dcc, 0x45ec, 0x96d5, 0xffff, 0xf38e, 0xe0e5, 0x4ab9, 0xb5bd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9d1c, 0xffff, 0xe905, 0xfedb, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xe7bd, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x4279, 0xffff, 0xe8e4, 0xe8e4, 0xe8e4, 0xe8e4, 0xd924, 0x4c88, 0x2589, 0x2589, 0x2589, 0x2c8e, 0x3a59, 0x33b2, 0x2589, 0x3d08, 0xe8e4, 0x918f, 0xf229, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x3a59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xbddd, 0x7c1b, 0x5b1a, 0xdf1e, 0x9d1c, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xc65d, 0x845b, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xad7d, 0x9d1c, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x5b3a, 0x3a59, 0x3a59, 0x3a59, 0x3a59, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
  0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff
};

void setup() {
  // Initialize the serial port for debugging
  Serial.begin(9600);
  Serial.println("ST7735 Test");

  // Initialize the display
  tft.initR(INITR_MINI160x80);  // Initialize with the black tab version of ST7735
  tft.setRotation(1);

  tft.fillScreen(ST77XX_BLACK);

  // Display some text
  tft.setTextColor(ST77XX_WHITE);  // Set text color
  tft.setTextSize(2);              // Set text size
  tft.setCursor(0, 0);             // Set cursor position
  tft.println("Hello, Ida!");

  // Draw a rectangle
  tft.drawRect(10, 20, 50, 30, ST77XX_RED);

  // Draw a filled circle
  tft.fillCircle(80, 40, 15, ST77XX_BLUE);

  tft.drawRGBBitmap(0, 40, mickey, IMG_W, IMG_H);
 // tft.drawGrayscaleBitmap()
}

void loop() {
  // put your main code here, to run repeatedly:

}
